{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/images/cclogo.png","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/nav.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","React","createContext","PropTypes","object","string","isRequired","func","module","exports","p","m","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","propTypes","shape","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","Header","siteTitle","react_default","style","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","to","color","textDecoration","width","className","src","logo","alt","Nav","Layout","children","header","nav","Date","getFullYear","node"],"mappings":"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","file":"component---src-pages-404-js-f5a64f73acba4ea9e41c.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","module.exports = __webpack_public_path__ + \"static/cclogo-a05667368776f1f14f208950e7739ab3.png\";","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nimport logo from '../images/cclogo.png'\nimport Img from \"gatsby-image\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          <div style={{ width: '160px', margin: '0 auto' }}>\n            <img className='mb-0' src={logo} alt=\"Logo\" />\n          </div>\n        </Link>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nimport logo from '../images/cclogo.png'\nimport Img from \"gatsby-image\"\n\nconst Nav = ({ siteTitle }) => (\n  <div className='mynav text-center mb-5'>\n    <Link\n      to=\"/about\"\n      className='py-2 px-2 mx-2'\n      style={{\n        textDecoration: `none`,\n      }}\n    >\n      About\n    </Link>\n    <Link\n      to=\"/contact\"\n      className='py-2 px-2 mx-2'\n      style={{\n        textDecoration: `none`,\n      }}\n    >\n      Contact\n    </Link>\n  </div>\n)\n\nNav.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nNav.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Nav\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\n// import { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport Nav from \"./nav\"\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  // <StaticQuery\n  //   query={graphql`\n  //     query SiteTitleQuery {\n  //       site {\n  //         siteMetadata {\n  //           title\n  //         }\n  //       }\n  //     }\n  //   `}\n  //   render={data => (\n  //     <>\n  <div className='container'>\n    <Header />\n    <Nav />\n    <main>\n      {children}\n      <h6 className='text-center pt-5 pb-2 mb-0'>© {new Date().getFullYear()}, Cookbook Connections - Built with ZAPI</h6>\n    </main>\n  </div>\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}